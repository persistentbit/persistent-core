package com.persistentbit.core;

import com.persistentbit.core.codegen.GenNoGetter;
import com.persistentbit.core.properties.FieldNames;

import java.io.Serializable;
import java.util.Optional;

/**
 * A Tuple3 contains 3 nullable values with possible different types.
 *
 * @author Peter Muys
 */
@Immutable
public class Tuple3<T1, T2,T3> implements Comparable<Tuple3<T1,T2,T3>>,Serializable {
    @GenNoGetter
    @Nullable  public final T1 _1;
    @GenNoGetter
    @Nullable  public final T2 _2;
    @GenNoGetter
    @Nullable  public final T3 _3;
    /**
     * Create a new Tuple3 with 3 values
     * @param v1 First value
     * @param v2 Second value
     * @param v3 Third value
     */
    @FieldNames(names = {"_1","_2","_3"})
    public Tuple3(T1 v1, T2 v2, T3 v3) {
        this._1 = v1;
        this._2 = v2;
        this._3 = v3;
    }

    /**
     * Create a new Tuple3 from the given values.
     * @param v1 _1 value
     * @param v2 _2 value
     * @param v3 _3 value
     *
     * @param <T1> Type of _1
     * @param <T2> Type of _2
     * @param <T3> Type of _3
     * @return a new Tuple3
     */
    static public <T1,T2,T3> Tuple3<T1,T2,T3> of(T1 v1, T2 v2,T3 v3){
        return new Tuple3<>(v1,v2,v3);
    }

    @Override
    public int hashCode() {
        return (_1 == null ? 1 :_1.hashCode()) + (_2 == null ? 1 : _2.hashCode())+ (_3 == null ? 1 : _3.hashCode());
    }

    @Override
    public boolean equals(Object obj) {
        if(obj == this) { return true; }
        if(obj instanceof Tuple3 == false){
            return false;
        }
        Tuple3 other = (Tuple3)obj;
        if(this._1 == null){
            return other._1 == null;
        }
        if(this._2 == null){
            return other._2 == null;
        }
        if(this._3 == null){
            return other._3 == null;
        }
        return this._1.equals(other._1) && this._2.equals(other._2) && this._3.equals(other._3);
    }

    @Override
    public String toString() {
        return "(" + _1 + "," + _2 + ", " + _3 + ")";
    }

    public Optional<T1> get1() {
        return Optional.ofNullable(_1);
    }

    public Optional<T2> get2() {
        return Optional.ofNullable(_2);
    }

    public Optional<T3> get3() {
        return Optional.ofNullable(_3);
    }

    @Override
    public int compareTo(Tuple3<T1, T2,T3> o) {
        Comparable<T1> c1 = (Comparable<T1>)this;
        int r =c1.compareTo(o._1);
        if(r != 0){
            return r;
        }
        Comparable<T2> c2 = (Comparable<T2>)this;
        r = c2.compareTo(o._2);
        if(r != 0) { return r; }
        Comparable<T3> c3 = (Comparable<T3>)this;
        return c3.compareTo(o._3);
    }





    //Generated by com.persistentbit.core.codegen.ImmutableCodeBuilder

    public Tuple3<T1,T2,T3>	 with_1(T1 value){
        return new Tuple3<>(value, this._2,this._3);
    }

    public Tuple3<T1,T2,T3>	 with_2(T2 value){
        return new Tuple3<>(this._1, value,this._3);
    }
    public Tuple3<T1,T2,T3>	 with_3(T3 value){
        return new Tuple3<>(this._1, this._2,value);
    }

}
